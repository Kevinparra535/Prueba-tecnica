@import "../tokens/colors";
@import "../tokens/spacings";
@import "../tokens/typos";

@mixin box {
	border-radius: $space_x3;
}
@mixin shadows {
	-webkit-box-shadow: 7px 10px 61px -19px rgba(0, 0, 0, 0.75);
	-moz-box-shadow: 7px 10px 61px -19px rgba(0, 0, 0, 0.75);
	box-shadow: 7px 10px 61px -19px rgba(0, 0, 0, 0.75);
}
@mixin card {
	img {
		margin: $space_x2 0;
		width: 70px;
	}
	&--text p {
		margin: 0;
		@include font-size($p);
	}
	&--grades {
		padding: $space_x2 $space;
		margin-top: $space;
		width: 100%;
		text-align: center;
		border-radius: $space_x2;
		color: $color-claro;
		background-color: $color-primario;
	}
	@include media(tablet) {
		img {
			margin-left: $space_x2;
			width: 70px;
		}
		&--text p {
			margin: 0;
			@include font-size($p);
		}
		&--grades {
			padding: $space_x3 $space;
			margin-top: 0;
			width: 150px;
			text-align: center;
			border-radius: $space_x2;
			color: $color-claro;
			background-color: $color-primario;
		}
	}
	@include media(desktop-s) {
		img {
			margin-left: $space_x2;
			width: 50px;
		}
		&--text p {
			margin: 0;
		}
		&--grades {
			padding: $space_x3 $space;
			margin-top: 0;

			width: 85px;
			text-align: center;
			border-radius: $space_x2;
			color: $color-claro;
			background-color: $color-primario;
		}
	}
}

@mixin botones {
	padding: $space $space_x2;
	margin: $space_x2 0;
	width: 80%;
	background-color: transparent;
	cursor: pointer;
	@include box;
	&:hover {
		background-color: get-opacity($color-primario, 0.8);
	}
}

@mixin imageCard {
	&--text {
		padding: $space_x2 $space;
		position: absolute;
		z-index: 1;
		margin-top: -300px;
		width: 300px;
		font-weight: $bolder;
		text-align: left;
		color: $color-claro;
		img {
			width: 20px;
		}
	}
	&--img {
		position: relative;
		width: 100%;
		object-fit: cover;
		@include box;
	}
}

//Funcion para el texto responsivo
@function calculateRem($size) {
	$remSize: $size / 16px;
	@return $remSize * 1rem;
}

// Dependiendo del tama√±o del texto se selecciona un alto de linea automatica
@mixin font-size($size) {
	font-size: $size;
	font-size: calculateRem($size);
	line-height: calculateRem($size) * 1.5;
}

// Opacidad
@function get-opacity($color, $amount) {
	@return rgba($color, $amount);
}

@each $header, $size in (h1: 30px, h2: 25px, h3: $space_x2) {
	#{$header} {
		//Se declara el elemento
		font-size: $size; //Le decimos que por cada etiqueta h imprimimos los valores
		margin: 0;
	}
}
